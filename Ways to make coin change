
import java.util.*;
public class Solution {

	public static long countWaysToMakeChange(int denominations[], int value){
        //write your code here
        int n = denominations.length;
        long[] prev = new long[value+1];
        long[] curr = new long[value+1];
        //long[][] dp = new long[n][value+1];
        for(int T=0; T<=value; T++){
             if(T % denominations[0]==0){
                 prev[T] = 1;
             }
        }
        
        for(int ind=1; ind<n; ind++){
            for(int T=0; T<=value; T++){
                long notTake = prev[T];
                long take = 0;
                if(denominations[ind] <= T){
                    take = curr[T-denominations[ind]];
                }
                
                curr[T] = take + notTake;
            }
            prev = curr;
        }
        return prev[value];
	}
}
