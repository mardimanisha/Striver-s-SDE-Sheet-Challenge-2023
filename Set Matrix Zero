Given a matrix if an element in the matrix is 0 then you will have to set its entire column and row to 0 and then return the matrix.

import java.io.*;
import java.util.* ;

public class Solution {
    public static void setZeros(int matrix[][]) {
        // Write your code here..
        int n = matrix.length;
        int m = matrix[0].length;

        int[] row = new int[n];
        int[] col = new int[m];

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(matrix[i][j] == 0){
                    row[i] = 1;
                    col[j] = 1;
                }
            }
        }

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(row[i]==1 || col[j]==1){
                    matrix[i][j] = 0;
                }
            }
        }
    }

}

TIME COMPLEXITY: 0(2*(n*m)), as we are traversing entire matrix twice of each 0(n*m) time complexity.
SPACE COMPLEXITY: 0(n)+0(m), for taking two array of length row that is n, and of length column of m size.
